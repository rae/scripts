#!/bin/bash

prog="${0##*/}"

if [ $# -lt 2 ]; then
	echo "Usage: $prog branch file [file..]"
	exit 1
fi

branch="$1"
root="$(git rev-parse --show-toplevel)"
# check to see if we should stick "origin/" in front
if [[ ! -r "${root}/.git/refs/heads/${branch}" ]]; then
	# grep for the branch name fromthe list of branches, pinning it to the end
	branches=($(git branch -r | grep -i "${branch}$"))
	if [[ ${#branches[@]} == 1 ]]; then
		branch="${branches}"
		echo "${prog}: using branch $branch"
	elif [[ ${#branches[@]} == 0 ]]; then
		echo "${prog}: Cannot find branch locally or on any server: $branch"
		exit 1
	else
		echo "${prog}: branch name is ambiguous: ${branch}"
		for br in "${branches[@]}"; do
			echo "    $br"
		done
		exit 1
	fi
fi

shift

for file; do
	if [[ "${file}" != ./* ]]; then
		file="./${file}"
	fi
	echo git show "${branch}":"${file}"
	git show "${branch}":"${file}"
done
