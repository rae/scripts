#!/usr/bin/perl -s
sub dbg(@) {
	print "## @_\n" if $v;
}

# total duration in seconds
my $totalDuration=0;
foreach my $vid (@ARGV) {
	dbg "# vid=$vid\n";
	next unless $vid =~ /\.(mpg|mpeg|mkv|mov|mp4|m4v|flv|webm|rm|wmv|avi|asf|)$/i;
	open(FFMPEG, "ffmpeg -i \"$vid\" 2>&1 |") || die "${0}: can't read \"$vid\": $!\n";
	my $duration="";
	my $bitrate="";
	while(<FFMPEG>) {
		chomp;
		# get rid of an parenthesized stuff that might have commas
		s/ *\([^)]*\)//g;
		dbg "FF: $_";
		if(m#Duration: (\d\d):(\d\d):([\d.]+).*bitrate: (\d+ [a-z/]+)#) {
			my $h="$1h";
			my $m="$2m";
			my $s="$3s";
			$totalDuration += $3 + 60*$2 + 3600*$1;
			if($h eq "00h") {
				$h="";
				if($m eq "00m") {
					$m="";
				}
			}
			
			$duration="$h$m$s";
			$bitrate=$4;
		} elsif(m#Video: ([^,]*), ([^,]*), (\d+)x(\d+)[^,]*, ([^,]*), ([^,]*),#) {
			# note: above regexp uses commas to delineate
			printf("%13s %12s %6sp \"%s\"\n", $duration, $bitrate, $4,$vid)
		}
	}
}
my $hours="";
my $minutes="";
if($totalDuration > 60) {
	if($totalDuration > 3600) {
		my $h = int($totalDuration/3600);
		$hours = sprintf("%dh", $h);
		$totalDuration -= $h*3600;
	}
	my $m=int($totalDuration/60);
	$minutes = sprintf("%dm", $m);
	$totalDuration -= $m*60;
}
my $seconds=sprintf("%04.2fs", $totalDuration);
print "Total duration: ${hours}${minutes}${seconds}\n\n";
__DATA__
for vid; do
	echo -n "${vid}:	"
	ffmpeg -i "${vid}" |& egrep 'Video.*fps'
done \
| perl -pe 's# / 0x[0-9a-f]+##;
			s# \[.*\]##;
			s# \S+ (tbc|tbn|tbr),?##g;
			s#, \(default\)##;
			s#Stream.*Video: ##;
			s#, yuv\w+\(.*\),#,#;
			'
