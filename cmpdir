#!/usr/bin/env perl

if (scalar @ARGV != 2) {
	die "Usage: $ARGV[0] dir1 dir2 - @ARGV\n";
}

my $src = $ARGV[0];
my $dest = $ARGV[1];
my %md5 = ();
my $esc = chr(27);
my $red = "${esc}[41m";
my $yellow = "${esc}[43m";
my $off = "${esc}[m";

-d $src || die "Not a directory: $src\n";
-d $dest || die "Not a directory: $dest\n";

my $dir;
chomp($dir = `pwd`);
chdir($src) || die "Can't cd to $src: $!\n";

my @files = `find . -type f \! -name '.*'`;
chomp(@files);

chdir($dir);
chdir($dest) || die "${red}Can't cd top $dest: $!{$off}\n";

my $width = 100;
my @missing=();
print "# scanning ${yellow}${dest}${off}\n";
my $count=0;
my $lines=1;
print " 1 ";
foreach $file (sort @files) {
	print ".";
	$count++;
	if($count % $width == 0) {
		$lines++;
		print "\n";
		printf("%2d ", $lines);
	}
	next if /\.DS_Store/;
	$file =~ s#\./##;
	next if $file =~ /^\./;
	if(! -r $file) {
		push @missing, $file;
		next;
	}
	$md5{$file} = `md5 -q "$file"`;
	chomp($md5{$file});
	# print "### $md5{$file}: $file\n";
}

chdir($dir);
chdir($src) || die "Can't cd to $src: $!\n";

print "\n# scanning ${yellow}${src}${off}\n";
my @keys = sort keys %md5;
my @matches=();
my @mismatches=();
foreach $file (@keys) {
	next if /\.DS_Store/;
	$file =~ s#\./##;
	next if $file =~ /^\./;
	my $check = `md5 -q "$file" 2>/dev/null`;
	chomp($check);
	if($check eq $md5{$file}) {
		print "✅";
		push @matches, $file;
		# print "### ✅ matches $md5{$file}: $file\n";
	}
	else {
		print "❌";
		push @mismatches, $file;
		# print "### ❌ no match $file\n");
	}
	print "\n" if (scalar(@matches) + scalar(@mismatches)) % $width == 0;
}
print "\n";
print "Missing:\n";
print join("\n", @missing), "\n\n";
print "Mismatches:\n";
print join("\n", @mismatches), "\n\n";
